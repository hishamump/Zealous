@model Zealous.Models.RoleToUserViewModel

@{
    ViewBag.Title = "AddRoleToUser";
    var errors = ViewBag.Errors as IEnumerable<string>;

    SelectList roles = ViewBag.Roles;
}

<h2>Assign Role To User</h2>
@if (errors != null)
{
    <ul style="color:red">
        @foreach (var item in errors)
        {
            <li>@item</li>
        }
    </ul>
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("UserName", new { htmlAttributes = new { @class = "form-control", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>

            @Html.Label("Role", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.RoleName, roles, "<Select a Role>", new { @class = "form-control drop-down", @style = "width:160px" })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                @*@Html.Editor("Role", new { htmlAttributes = new { @class = "form-control" } })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Assign" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
